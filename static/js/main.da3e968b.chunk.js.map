{"version":3,"sources":["warning.svg","components/Terminals.jsx","components/DlMap.jsx","components/UseDebounced.js","components/App.js","index.js"],"names":["module","exports","Button","styled","div","Wrap","Name","Phone","Wortable","Terminals","selectTerminal","pointCoords","balloonClickHandler","e","element","target","classList","contains","dataset","lat","lon","address","useEffect","document","addEventListener","removeEventListener","terminals","length","map","item","key","id","terminal","latitude","longitude","terminalSelected","modules","geometry","properties","hintContent","city","balloonContentBody","ReactDOMServer","renderToStaticMarkup","name","terminalAddress","show_phones","i","worktables","work_hours","data-address","data-lat","data-lon","className","options","preset","iconColor","MapWrap","InpWrap","Input","input","Options","Option","manual","TerminalMesg","ErrMesg","API_ADDRESSATOR","DlMap","setToast","useState","setPointCoords","pointAddress","setPointAddress","manulaInp","setManualInp","mapRef","setMapRef","ymaps","setYmaps","pointRef","setPointRef","isTerminal","setIsTerminal","value","setValue","setOptions","showError","setShowError","fetchAddress","val","fetch","Array","isArray","join","then","r","json","checkAddress","res","data","property","components","find","kind","debouncedFetchAddress","func","delay","ref","useRef","args","clearTimeout","current","setTimeout","UseDebouncedFunc","opts","books","includes","push","result","kladr_id","catch","err","console","log","setPoint","coords","geolocation","get","mapStateAutoApply","geoObjects","position","setCenter","balloon","close","query","apikey","process","onChange","type","placeholder","src","WarningSvg","alt","onClick","opt","point","split","selectOption","onLoad","width","height","defaultState","center","zoom","suppressMapOpenBlock","instanceRef","onDragend","getCoordinates","draggable","balloonContent","Toast","App","toast","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da3e968b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/warning.b9aa2a80.svg\";","import React, { useEffect, Fragment } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport terminals from '../contacts.json';\nimport { Placemark } from 'react-yandex-maps';\nimport styled from 'styled-components';\n\nconst Button = styled.div`\n  padding: 5px 10px;\n  text-align: center;\n  background: #f38a69;\n  color: #ffffff;\n  border-radius: 3px;\n  cursor: pointer;\n  margin-top: 10px;\n  &:hover {\n    background: #e07f61;\n  }\n`;\n\nconst Wrap = styled.div`\n  width: 260px;\n`;\n\nconst Name = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst Phone = styled.div`\n  font-weight: bold;\n  margin-top: 5px;\n`;\n\nconst Wortable = styled.div`\n  margin-top: 5px;\n`;\n\nconst Terminals = ({ selectTerminal, pointCoords }) => {\n  const balloonClickHandler = (e) => {\n    const element = e.target;\n\n    if (element.classList.contains('select-terminal')) {\n      const { lat, lon, address } = element.dataset;\n      selectTerminal([lat, lon], address);\n    }\n  }\n\n  const terminalSelected = item => {\n    return pointCoords && +pointCoords[0] === item.terminal.latitude && +pointCoords[1] === item.terminal.longitude;\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', balloonClickHandler);\n    return () => document.removeEventListener('click', balloonClickHandler);\n  }, []);\n\n  if (!terminals || !terminals.length) return '';\n\n  return (\n    <>{\n      terminals.map((item) => (\n        <Fragment key={item.id}>\n          {\n            !terminalSelected(item) ? (<Placemark\n              key={item.id}\n              modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\n              geometry={[item.terminal.latitude, item.terminal.longitude]}\n              properties={{\n                hintContent: `${item.city} ${item.address}`,\n                balloonContentBody: ReactDOMServer.renderToStaticMarkup(\n                  <Wrap>\n                    <b>г. {item.city}</b><br />\n                    <Name>Название терминала: {item.name}</Name>\n                    {item.terminal.terminalAddress}\n                    {item.show_phones && item.show_phones.length \n                      ? item.show_phones.map((item, i) => <Phone key={i}>{item}</Phone>)\n                      : ''}\n                    {item.worktables && item.worktables[0] && item.worktables[0].work_hours\n                      ? (<Wortable>Режим работы: <b>{item.worktables[0].work_hours}</b></Wortable>)\n                      : ''}\n                    <Button\n                      data-address={item.terminal.terminalAddress}\n                      data-lat={item.terminal.latitude}\n                      data-lon={item.terminal.longitude}\n                      className=\"select-terminal\"\n                    >\n                      Выбрать\n                    </Button>\n                  </Wrap>,\n                ),\n              }}\n              options={{\n                preset: 'islands#dotIcon',\n                iconColor: '#e84d6f',\n              }}\n            />) : ''\n          }\n        </Fragment>\n      ))\n    }</>\n  )\n};\n\nexport default Terminals;","import React, { useState, useEffect } from 'react';\nimport { YMaps, Map, GeolocationControl, ZoomControl, Placemark } from 'react-yandex-maps';\nimport styled from 'styled-components';\nimport Terminals from './Terminals';\nimport UseDebouncedFunc from './UseDebounced';\nimport WarningSvg from '../warning.svg'\n\nconst MapWrap = styled.div`\n  overflow: hidden;\n  border-radius: 3px;\n  box-shadow: 0px 1px 10px rgba(0,0,0,0.3);\n  position: relative;\n`;\n\nconst InpWrap = styled.div`\n  position: relative;\n  margin-bottom: 40px;\n`;\n\nconst Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  border: 1px solid #D6D6D6;\n  box-shadow: 0 1px 5px rgba(0,0,0,0.1);\n  border-radius: 4px;\n  outline: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  background: transparent;\n`;\n\nconst Options = styled.div`\n  overflow-y: auto;\n  max-height: 200px;\n  top: 100%;\n  left: 5px;\n  right: 5px;\n  background: #ffffff;\n  position: absolute;\n  z-index: 3;\n  box-shadow: 0 1px 5px rgba(0,0,0,0.1);\n  margin-top: 10px;\n  border-radius: 2px;\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  font-size: 14px;\n  cursor: pointer;\n  ${({ manual }) => (manual ? 'color: green;' : '')}\n  &:hover {\n    background: #f7f7f7;\n  }\n`;\n\nconst TerminalMesg = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 10px;\n  right: 10px;\n  padding-left: 3px;\n  font-size: 14px;\n  padding-top: 4px;\n  color: #638844;\n  img {\n    margin-top: -2px;\n    display: block;\n    width: 20px;\n    float: left;\n    margin-right: 6px;\n  }\n`;\n\nconst ErrMesg = styled.div`\n  font-size: 14px;\n  padding-top: 4px;\n  color: #e02626;\n  position: absolute;\n  top: 100%;\n  left: 10px;\n  right: 10px;\n`;\n\nconst API_KEY_YMAPS = process.env.REACT_APP_MAP_API_KEY;\nconst BASE_URL = process.env.NODE_ENV === 'development' ? '' : 'https://www.dellin.stage';\nconst API_ADDRESSATOR = `${BASE_URL}/api/v2/address/`;\n\nconst DlMap = ({ setToast }) => {\n  const [pointCoords, setPointCoords] = useState([]);\n  const [pointAddress, setPointAddress] = useState('');\n\n  const [manulaInp, setManualInp] = useState(false);\n  const [mapRef, setMapRef] = useState(null);\n  const [ymaps, setYmaps] = useState(null);\n  const [pointRef, setPointRef] = useState(null);\n  const [isTerminal, setIsTerminal] = useState(false);\n\n  const [value, setValue] = useState('');\n  const [options, setOptions] = useState(null);\n  const [showError, setShowError] = useState('');\n\n  const fetchAddress = (val, options) => {\n    setShowError('');\n    setIsTerminal(false);\n    return fetch(`${API_ADDRESSATOR}?query=${Array.isArray(val) ? val.join(',') : val}${options || ''}`)\n      .then(r => r.json())\n  }\n\n  const checkAddress = (res) => {\n    const hasHouse = res.data[0].property.components.find(i => i.kind === 'house');\n    if (!hasHouse) setShowError('Не указан номер дома!');\n  }\n\n  const mapClick = e => setPoint(e.get('coords'));\n\n  const movePoint = () => setPoint(pointRef.geometry.getCoordinates());\n\n  const debouncedFetchAddress = UseDebouncedFunc((val) => {\n    fetchAddress(val).then(res => {\n      if (res && res.data) {\n        const opts = [...res.data];\n        if ((res.data[0] && res.data[0].books.includes('cdi_clean')) || !res.data.length) {\n          opts.push({ result: 'Нет в списке', property: { kladr_id: 'manualInp' } })\n        }\n        setOptions(opts);\n      }\n    }).catch(err => console.log('ERROR: ', err));\n  }, 300);\n\n  const onChangeHandler = (e) => {\n    const val = e.target.value;\n    setValue(val);\n    if (val) debouncedFetchAddress(val);\n  }\n\n  const selectOption = (opt) => {\n    if (opt.property.kladr_id === 'manualInp') {\n      setManualInp(true);\n      setOptions(null);\n      return;\n    }\n    \n    setValue(opt.result);\n    setOptions(null);\n    if (opt.books.includes('cdi_clean')) {\n      fetchAddress(opt.result, '&fields=point')\n        .then(res => {\n          if (res && res.data) {\n            const coords = res.data[0].point.split(',');\n            const address = opt.result;\n\n            setPointCoords(coords);\n            setPointAddress(address);\n            mapRef.setCenter(coords, 17);\n\n            checkAddress(res);\n          }\n        })\n        .catch(err => console.log('ERROR: ', err));\n    }\n  }\n\n  const setPoint = coords => {\n    setIsTerminal(false);\n    setPointCoords(coords);\n\n    fetchAddress(coords)\n      .then(res => {\n        if (res && res.data) {\n          setValue(res.data[0].result);\n          setPointAddress(res.data[0].result);\n          checkAddress(res);\n        }\n      })\n      .catch(err => console.log('ERROR: ', err));\n  }\n\n  const selectTerminal = (coords, address) => {\n    setValue(address);\n    setIsTerminal(true);\n    setPointCoords(coords);\n    setPointAddress(address);\n  }\n\n  // Initial Postion bases on geolocation\n  useEffect(() => {\n    if (ymaps && mapRef) {\n      ymaps.geolocation.get({\n        mapStateAutoApply: true\n      })\n      .then(function(result) {\n        if (result) {\n          const coords = result.geoObjects.position;\n          mapRef.setCenter(coords, 16);\n          setPointCoords(coords);\n          fetchAddress(coords)\n            .then(res => {\n              if (res && res.data) {\n                setValue(res.data[0].result);\n                setPointAddress(res.data[0].result);\n              }\n            })\n            .catch(err => console.log('ERROR: ', err));\n        }\n      });\n    }\n  }, [ymaps, mapRef])\n\n  useEffect(() => {\n    if (pointCoords && mapRef) mapRef.balloon.close();\n  }, [pointCoords, mapRef]);\n\n  useEffect(() => {\n    setManualInp(false);\n  }, [value]);\n\n  return (\n    <YMaps query={{ apikey: API_KEY_YMAPS }}>\n      <InpWrap>\n        <Input onChange={onChangeHandler} value={value} type=\"text\" placeholder=\"Адрес\" />\n        {isTerminal && (\n          <TerminalMesg>\n            <img src={WarningSvg} alt=\"\" />\n            Отправка из терминала\n          </TerminalMesg>\n        )}\n        {!isTerminal && showError && <ErrMesg>{showError}</ErrMesg>}\n        {options && (\n          <Options>\n            {options.map(item => (\n              <Option\n                key={item.property.kladr_id}\n                onClick={() => selectOption(item)}\n                manual={item.property.kladr_id === 'manualInp'}\n              >\n                {item.result}\n              </Option>\n            ))}\n          </Options>\n        )}\n      </InpWrap>\n      <MapWrap>\n        <Map\n          modules={['geolocation', 'geocode', 'coordSystem.geo']}\n          onLoad={setYmaps}\n          onClick={mapClick}\n          width={'100%'}\n          height={'500px'}\n          defaultState={{ center: [55.75, 37.57], zoom: 12 }}\n          options={{ suppressMapOpenBlock: true }}\n          instanceRef={setMapRef}\n        >\n          {\n            !manulaInp && pointCoords && pointCoords.length ? (\n              <Placemark\n                modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\n                onDragend={movePoint}\n                geometry={pointCoords}\n                options={{ draggable: true }}\n                properties={{\n                  hintContent: pointAddress,\n                  balloonContent: '<div style=\"width: 200px;\">' + pointAddress + '</div>'\n                }}\n                instanceRef={setPointRef}\n              />\n            ) : ''\n          }\n          <Terminals selectTerminal={selectTerminal} pointCoords={pointCoords} />\n          <ZoomControl />\n          <GeolocationControl />\n        </Map>\n      </MapWrap>\n    </YMaps>\n  )\n}\n\nexport default DlMap;","import { useRef } from 'react';\n\nexport default function useDebouncedFunction(func, delay) {\n  const ref = useRef(null);\n\n  return (...args) => {\n    clearTimeout(ref.current);\n    ref.current = setTimeout(() => func(...args), delay);\n  };\n}","import React, { useEffect, useState, useRef } from 'react';\nimport DlMap from './DlMap';\nimport styled from 'styled-components';\n\nconst Wrap = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  padding: 40px 10px 100px 10px;\n`;\n\nconst Toast = styled.div`\n  width: 300px;\n  padding: 10px 20px;\n  color: #ffffff;\n  border-radius: 4px;\n  box-shadow: 0px 1px 10px rgba(0,0,0,0.3);\n  position: fixed;\n  right: 30px;\n  bottom: 30px;\n  background: #e04439;\n  z-index: 100;\n  font-size: 14px;\n\n  animation: fadeIn 0.3s ease;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      right: -100px;\n    }\n    to {\n      opacity: 1;\n      right: 30px;\n    }\n  }\n`;\n\nfunction App() {\n  const [toast, setToast] = useState('');\n  const ref = useRef(null);\n\n  useEffect(() => {\n    clearTimeout(ref.current);\n    ref.current = setTimeout(() => {\n      setToast(false);\n    }, 2000);\n    return () => {\n      clearTimeout(ref.current);\n    }\n  }, [toast]);\n\n  return (\n    <Wrap>\n      {toast && <Toast>{toast}</Toast>}\n      <DlMap width=\"100%\" setToast={setToast} />\n    </Wrap>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}