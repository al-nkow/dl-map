{"version":3,"sources":["warning.svg","components/Terminals.jsx","components/DlMap.jsx","components/UseDebounced.js","components/App.js","index.js"],"names":["module","exports","Button","styled","div","Wrap","Name","Phone","Wortable","Terminals","selectTerminal","pointCoords","balloonClickHandler","e","element","target","classList","contains","dataset","lat","lon","address","useEffect","document","addEventListener","removeEventListener","terminals","length","map","item","key","id","terminal","latitude","longitude","terminalSelected","geometry","properties","hintContent","city","balloonContentBody","ReactDOMServer","renderToStaticMarkup","name","terminalAddress","show_phones","i","worktables","work_hours","data-address","data-lat","data-lon","className","options","preset","iconColor","MapWrap","InpWrap","Input","input","Options","Option","TerminalMesg","ErrMesg","DlMap","setToast","useState","setPointCoords","pointAddress","setPointAddress","mapRef","setMapRef","ymaps","setYmaps","pointRef","setPointRef","isTerminal","setIsTerminal","value","setValue","setOptions","showError","setShowError","fetchAddress","val","fetch","Array","isArray","join","then","r","json","checkAddress","res","data","property","components","find","type","debouncedFetchAddress","func","delay","ref","useRef","args","clearTimeout","current","setTimeout","UseDebouncedFunc","catch","err","console","log","setPoint","coords","result","geolocation","get","mapStateAutoApply","geoObjects","position","setCenter","balloon","close","query","apikey","process","onChange","placeholder","src","WarningSvg","alt","onClick","opt","books","point","split","kladr_id","modules","onLoad","width","height","defaultState","center","zoom","suppressMapOpenBlock","instanceRef","onDragend","getCoordinates","draggable","balloonContent","Toast","App","toast","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48062f44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/warning.b9aa2a80.svg\";","import React, { useEffect, Fragment } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport terminals from '../contacts.json';\nimport { Placemark } from 'react-yandex-maps';\nimport styled from 'styled-components';\n\nconst Button = styled.div`\n  padding: 5px 10px;\n  text-align: center;\n  background: #f38a69;\n  color: #ffffff;\n  border-radius: 3px;\n  cursor: pointer;\n  margin-top: 10px;\n  &:hover {\n    background: #e07f61;\n  }\n`;\n\nconst Wrap = styled.div`\n  width: 260px;\n`;\n\nconst Name = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst Phone = styled.div`\n  font-weight: bold;\n  margin-top: 5px;\n`;\n\nconst Wortable = styled.div`\n  margin-top: 5px;\n`;\n\nconst Terminals = ({ selectTerminal, pointCoords }) => {\n  const balloonClickHandler = (e) => {\n    const element = e.target;\n\n    if (element.classList.contains('select-terminal')) {\n      const { lat, lon, address } = element.dataset;\n      selectTerminal([lat, lon], address);\n    }\n  }\n\n  const terminalSelected = item => {\n    return pointCoords && +pointCoords[0] === item.terminal.latitude && +pointCoords[1] === item.terminal.longitude;\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', balloonClickHandler);\n    return () => document.removeEventListener('click', balloonClickHandler);\n  }, []);\n\n  if (!terminals || !terminals.length) return '';\n\n  return (\n    <>{\n      terminals.map((item) => (\n        <Fragment key={item.id}>\n          {\n            !terminalSelected(item) ? (<Placemark\n              key={item.id}\n              geometry={[item.terminal.latitude, item.terminal.longitude]}\n              properties={{\n                hintContent: `${item.city} ${item.address}`,\n                balloonContentBody: ReactDOMServer.renderToStaticMarkup(\n                  <Wrap>\n                    <b>г. {item.city}</b><br />\n                    <Name>Название терминала: {item.name}</Name>\n                    {item.terminal.terminalAddress}\n                    {item.show_phones && item.show_phones.length \n                      ? item.show_phones.map((item, i) => <Phone key={i}>{item}</Phone>)\n                      : ''}\n                    {item.worktables && item.worktables[0] && item.worktables[0].work_hours\n                      ? (<Wortable>Режим работы: <b>{item.worktables[0].work_hours}</b></Wortable>)\n                      : ''}\n                    <Button\n                      data-address={item.terminal.terminalAddress}\n                      data-lat={item.terminal.latitude}\n                      data-lon={item.terminal.longitude}\n                      className=\"select-terminal\"\n                    >\n                      Выбрать\n                    </Button>\n                  </Wrap>,\n                ),\n              }}\n              options={{\n                preset: 'islands#dotIcon',\n                iconColor: '#e84d6f',\n              }}\n            />) : ''\n          }\n        </Fragment>\n      ))\n    }</>\n  )\n};\n\nexport default Terminals;","import React, { useState, useEffect } from 'react';\nimport { YMaps, Map, GeolocationControl, ZoomControl, Placemark } from 'react-yandex-maps';\nimport styled from 'styled-components';\nimport Terminals from './Terminals';\nimport UseDebouncedFunc from './UseDebounced';\nimport WarningSvg from '../warning.svg'\n\nconst MapWrap = styled.div`\n  overflow: hidden;\n  border-radius: 3px;\n  box-shadow: 0px 1px 10px rgba(0,0,0,0.3);\n  position: relative;\n`;\n\nconst InpWrap = styled.div`\n  position: relative;\n  margin-bottom: 40px;\n`;\n\nconst Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  border: 1px solid #D6D6D6;\n  box-shadow: 0 1px 5px rgba(0,0,0,0.1);\n  border-radius: 4px;\n  outline: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  background: transparent;\n`;\n\nconst Options = styled.div`\n  overflow-y: auto;\n  max-height: 200px;\n  top: 100%;\n  left: 5px;\n  right: 5px;\n  background: #ffffff;\n  position: absolute;\n  z-index: 3;\n  box-shadow: 0 1px 5px rgba(0,0,0,0.1);\n  margin-top: 10px;\n  border-radius: 2px;\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  font-size: 14px;\n  cursor: pointer;\n  &:hover {\n    background: #f7f7f7;\n  }\n`;\n\nconst TerminalMesg = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 10px;\n  right: 10px;\n  padding-left: 3px;\n  font-size: 14px;\n  padding-top: 4px;\n  color: #638844;\n  img {\n    margin-top: -2px;\n    display: block;\n    width: 20px;\n    float: left;\n    margin-right: 6px;\n  }\n`;\n\nconst ErrMesg = styled.div`\n  font-size: 14px;\n  padding-top: 4px;\n  color: #e02626;\n  position: absolute;\n  top: 100%;\n  left: 10px;\n  right: 10px;\n`;\n\nconst API_KEY_YMAPS = process.env.REACT_APP_MAP_API_KEY;\nconst API_ADDRESSATOR = 'https://www.dellin.stage/api/v2/address/';\n\nconst DlMap = ({ setToast }) => {\n  const [pointCoords, setPointCoords] = useState([]);\n  const [pointAddress, setPointAddress] = useState('');\n\n  const [mapRef, setMapRef] = useState(null);\n  const [ymaps, setYmaps] = useState(null);\n  const [pointRef, setPointRef] = useState(null);\n  const [isTerminal, setIsTerminal] = useState(false);\n\n  const [value, setValue] = useState('');\n  const [options, setOptions] = useState(null);\n  const [showError, setShowError] = useState('');\n\n  const fetchAddress = (val, options) => {\n    setShowError('');\n    return fetch(`${API_ADDRESSATOR}/?query=${Array.isArray(val) ? val.join(',') : val}${options || ''}`)\n      .then(r => r.json())\n  }\n\n  const checkAddress = (res) => {\n    const hasHouse = res.data[0].property.components.find(i => i.type === 'д');\n    if (!hasHouse) setShowError('Не указан номер дома!');\n  }\n\n  const mapClick = e => setPoint(e.get('coords'));\n\n  const movePoint = () => setPoint(pointRef.geometry.getCoordinates());\n\n  const debouncedFetchAddress = UseDebouncedFunc((val) => {\n    fetchAddress(val).then(res => {\n      if (res && res.data) setOptions(res.data);\n    }).catch(err => console.log('ERROR: ', err));\n  }, 300);\n\n  const onChangeHandler = (e) => {\n    const val = e.target.value;\n    setValue(val);\n    if (val) debouncedFetchAddress(val);\n  }\n\n  const selectOption = (opt) => {\n    setValue(opt.result);\n    setOptions(null);\n    if (opt.books[0] === 'cdi_clean') {\n      fetchAddress(opt.result, '&fields=point')\n        .then(res => {\n          if (res && res.data) {\n            const coords = res.data[0].point.split(',');\n            const address = opt.result;\n\n            setPointCoords(coords);\n            setPointAddress(address);\n            mapRef.setCenter(coords, 17);\n\n            checkAddress(res);\n          }\n        })\n        .catch(err => console.log('ERROR: ', err));\n    }\n  }\n\n  const setPoint = coords => {\n    setIsTerminal(false);\n    setPointCoords(coords);\n\n    fetchAddress(coords)\n      .then(res => {\n        if (res && res.data) {\n          setValue(res.data[0].result);\n          setPointAddress(res.data[0].result);\n          checkAddress(res);\n        }\n      })\n      .catch(err => console.log('ERROR: ', err));\n  }\n\n  const selectTerminal = (coords, address) => {\n\n\n    console.log('SELECT TERMINAL >>>>>>', coords, address);\n\n    setValue(address);\n    setIsTerminal(true);\n    setPointCoords(coords);\n    setPointAddress(address);\n  }\n\n  // Initial Postion bases on geolocation\n  useEffect(() => {\n    if (ymaps && mapRef) {\n      ymaps.geolocation.get({\n        mapStateAutoApply: true\n      })\n      .then(function(result) {\n        if (result) {\n          const coords = result.geoObjects.position;\n          mapRef.setCenter(coords, 16);\n          setPointCoords(coords);\n          fetchAddress(coords)\n            .then(res => {\n              if (res && res.data) {\n                setValue(res.data[0].result);\n                setPointAddress(res.data[0].result);\n              }\n            })\n            .catch(err => console.log('ERROR: ', err));\n        }\n      });\n    }\n  }, [ymaps, mapRef])\n\n  useEffect(() => {\n    if (pointCoords && mapRef) mapRef.balloon.close();\n  }, [pointCoords, mapRef]);\n\n  return (\n    <YMaps query={{ apikey: API_KEY_YMAPS }}>\n      <InpWrap>\n        <Input onChange={onChangeHandler} value={value} type=\"text\" placeholder=\"addressator\" />\n        {isTerminal && (\n          <TerminalMesg>\n            <img src={WarningSvg} alt=\"\" />\n            Отправка из терминала\n          </TerminalMesg>\n        )}\n        {showError && <ErrMesg>{showError}</ErrMesg>}\n        {options && (\n          <Options>\n            {options.map(item => (\n              <Option onClick={() => selectOption(item)} key={item.property.kladr_id}>{item.result}</Option>\n            ))}\n          </Options>\n        )}\n      </InpWrap>\n      <MapWrap>\n        <Map\n          modules={['geolocation', 'geocode', 'coordSystem.geo']}\n          onLoad={setYmaps}\n          onClick={mapClick}\n          width={'100%'}\n          height={'500px'}\n          defaultState={{ center: [55.75, 37.57], zoom: 12 }}\n          options={{ suppressMapOpenBlock: true }}\n          instanceRef={setMapRef}\n        >\n          {\n            pointCoords && pointCoords.length ? (\n              <Placemark\n                modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\n                onDragend={movePoint}\n                geometry={pointCoords}\n                options={{ draggable: true }}\n                properties={{\n                  hintContent: pointAddress,\n                  balloonContent: '<div style=\"width: 200px;\">' + pointAddress + '</div>'\n                }}\n                instanceRef={setPointRef}\n              />\n            ) : ''\n          }\n          <Terminals selectTerminal={selectTerminal} pointCoords={pointCoords} />\n          <ZoomControl />\n          <GeolocationControl />\n        </Map>\n      </MapWrap>\n    </YMaps>\n  )\n}\n\nexport default DlMap;","import { useRef } from 'react';\n\nexport default function useDebouncedFunction(func, delay) {\n  const ref = useRef(null);\n\n  return (...args) => {\n    clearTimeout(ref.current);\n    ref.current = setTimeout(() => func(...args), delay);\n  };\n}","import React, { useEffect, useState, useRef } from 'react';\nimport DlMap from './DlMap';\nimport styled from 'styled-components';\n\nconst Wrap = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  padding: 40px 10px 100px 10px;\n`;\n\nconst Toast = styled.div`\n  width: 300px;\n  padding: 10px 20px;\n  color: #ffffff;\n  border-radius: 4px;\n  box-shadow: 0px 1px 10px rgba(0,0,0,0.3);\n  position: fixed;\n  right: 30px;\n  bottom: 30px;\n  background: #e04439;\n  z-index: 100;\n  font-size: 14px;\n\n  animation: fadeIn 0.3s ease;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      right: -100px;\n    }\n    to {\n      opacity: 1;\n      right: 30px;\n    }\n  }\n`;\n\nfunction App() {\n  const [toast, setToast] = useState('');\n  const ref = useRef(null);\n\n  useEffect(() => {\n    clearTimeout(ref.current);\n    ref.current = setTimeout(() => {\n      setToast(false);\n    }, 2000);\n    return () => {\n      clearTimeout(ref.current);\n    }\n  }, [toast]);\n\n  return (\n    <Wrap>\n      {toast && <Toast>{toast}</Toast>}\n      <DlMap width=\"100%\" setToast={setToast} />\n    </Wrap>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}